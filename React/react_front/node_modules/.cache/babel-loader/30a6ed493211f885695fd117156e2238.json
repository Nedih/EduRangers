{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Flash\\\\Desktop\\\\React\\\\react_front\\\\src\\\\Containers\\\\AddCourse.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Courses.css';\nimport Button from \"react-bootstrap/Button\";\nimport history from \"../GlobalHistory/GlobalHistory\";\nimport Select from 'react-select';\nexport default function AddCourse(props) {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [abilities, setAbilities] = useState(\"\");\n  const [abs, setAbs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState();\n  const [names, setNames] = useState();\n\n  function Add(event) {\n    event.preventDefault();\n    const course = {\n      CourseName: name,\n      CourseDescription: desc,\n      AuthorEmail: props.match.params.email,\n      Abilities: JSON.stringify(abilities)\n    };\n    axios({\n      method: 'post',\n      url: \"https://localhost:44327/api/Course/\",\n      data: JSON.stringify(course),\n      maxContentLength: Infinity,\n      maxBodyLength: Infinity,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(\"RESPONSE \", res);\n      console.log(res.data);\n    });\n  }\n\n  function GetTest() {\n    axios({\n      method: 'get',\n      url: `https://localhost:44327/api/Ability/`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(result => {\n      console.log(\"RESULT: \", result.data);\n      setAbs(result.data);\n      setIsLoading(false);\n    }).catch(error => {\n      setError(error);\n      debugger;\n      setIsLoading(false);\n    });\n  }\n\n  function F() {\n    if (abs != null) {\n      console.log(\"ABS: \", abs);\n      setNames(abs.map(item => item.AbilityName));\n    }\n  }\n\n  useEffect(() => {\n    GetTest();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  } else if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 14\n    }, this);\n  } //const temp = abs.map((item) =>  item.AbilityName);\n\n  /* setNames(temp);*/\n\n  /*console.log(\"ABS: \", names);*/\n\n  /* <Select\r\n  closeMenuOnSelect={false}\r\n  components={animatedComponents}\r\n  defaultValue={[temp[0]]}\r\n  isMulti\r\n  options={temp}\r\n  />*/\n\n\n  const optionss = abs.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n    children: item.AbilityName\n  }, item.Id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 40\n  }, this));\n  const felix = abs.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: item.AbilityName\n  }, item.Id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 37\n  }, this));\n  const fel = abs.map(item => item.AbilityName);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Course\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: Add,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Course Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Email\",\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Course Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Password\",\n          onChange: e => setDesc(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Distance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          isMulti: true,\n          name: \"colors\",\n          options: felix,\n          className: \"basic-multi-select\",\n          classNamePrefix: \"select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Where is fesfsdgfsgrsgdsrgrgh: \", felix]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddCourse, \"Pq5w8PSBtgVYkQzqt+r72ZgmTSM=\");\n\n_c = AddCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCourse\");","map":{"version":3,"sources":["C:/Users/Flash/Desktop/React/react_front/src/Containers/AddCourse.js"],"names":["React","useState","useEffect","axios","Button","history","Select","AddCourse","props","name","setName","desc","setDesc","abilities","setAbilities","abs","setAbs","isLoading","setIsLoading","error","setError","names","setNames","Add","event","preventDefault","course","CourseName","CourseDescription","AuthorEmail","match","params","email","Abilities","JSON","stringify","method","url","data","maxContentLength","Infinity","maxBodyLength","headers","then","res","console","log","GetTest","result","catch","F","map","item","AbilityName","optionss","Id","felix","fel","e","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AAAA;;AAEpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACc,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,EAAlC;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,EAAlC;;AAEA,WAASsB,GAAT,CAAaC,KAAb,EAAmB;AACfA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,MAAM,GAAG;AACXC,MAAAA,UAAU,EAAElB,IADD;AAEXmB,MAAAA,iBAAiB,EAAEjB,IAFR;AAGXkB,MAAAA,WAAW,EAAErB,KAAK,CAACsB,KAAN,CAAYC,MAAZ,CAAmBC,KAHrB;AAIXC,MAAAA,SAAS,EAAEC,IAAI,CAACC,SAAL,CAAetB,SAAf;AAJA,KAAf;AAMAV,IAAAA,KAAK,CAAC;AACNiC,MAAAA,MAAM,EAAE,MADF;AAENC,MAAAA,GAAG,EAAE,qCAFC;AAGNC,MAAAA,IAAI,EAAEJ,IAAI,CAACC,SAAL,CAAeT,MAAf,CAHA;AAINa,MAAAA,gBAAgB,EAAEC,QAJZ;AAKNC,MAAAA,aAAa,EAAED,QALT;AAMNE,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AANH,KAAD,CAAL,CAQCC,IARD,CAQMC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,GAAzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACN,IAAhB;AACH,KAXD;AAYH;;AAED,WAASS,OAAT,GAAmB;AACjB5C,IAAAA,KAAK,CAAC;AAACiC,MAAAA,MAAM,EAAE,KAAT;AACNC,MAAAA,GAAG,EAAG,sCADA;AAENK,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAFH,KAAD,CAAL,CAGGC,IAHH,CAIKK,MAAD,IAAY;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,MAAM,CAACV,IAA/B;AACAtB,MAAAA,MAAM,CAACgC,MAAM,CAACV,IAAR,CAAN;AACApB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KARL,EASI+B,KATJ,CASU9B,KAAK,IAAI;AAACC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AAChB;AACgBD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAAqB,KAXzC;AAaD;;AAED,WAASgC,CAAT,GAAY;AACV,QAAGnC,GAAG,IAAI,IAAV,EAAe;AACb8B,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB/B,GAArB;AACAO,MAAAA,QAAQ,CAACP,GAAG,CAACoC,GAAJ,CAASC,IAAD,IAAUA,IAAI,CAACC,WAAvB,CAAD,CAAR;AACD;AACF;;AAEHnD,EAAAA,SAAS,CAAC,MAAM;AACX6C,IAAAA,OAAO;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAG9B,SAAH,EAAa;AACT,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAGH,GAJD,MAKK,IAAGE,KAAH,EAAS;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAlEqC,CAqEtC;;AACS;;AACC;;AAGA;AACZ;AACA;AACA;AACA;AACA;AACA;;;AACI,QAAMmC,QAAQ,GAAGvC,GAAG,CAACoC,GAAJ,CAASC,IAAD,iBAAU;AAAA,cAAuBA,IAAI,CAACC;AAA5B,KAAaD,IAAI,CAACG,EAAlB;AAAA;AAAA;AAAA;AAAA,UAAlB,CAAjB;AACA,QAAMC,KAAK,GAAGzC,GAAG,CAACoC,GAAJ,CAASC,IAAD,iBAAU;AAAA,cAAoBA,IAAI,CAACC;AAAzB,KAAUD,IAAI,CAACG,EAAf;AAAA;AAAA;AAAA;AAAA,UAAlB,CAAd;AACA,QAAME,GAAG,GAAG1C,GAAG,CAACoC,GAAJ,CAASC,IAAD,IAAWA,IAAI,CAACC,WAAxB,CAAZ;AACA,sBAEI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAA,6BACF;AAAM,QAAA,QAAQ,EAAE9B,GAAhB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,OAAxB;AAAgC,UAAA,QAAQ,EAAGmC,CAAD,IAAOhD,OAAO,CAACgD,CAAC,CAACC,MAAF,CAASC,KAAV;AAAxD;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,UAAxB;AAAmC,UAAA,QAAQ,EAAGF,CAAD,IAAO9C,OAAO,CAAC8C,CAAC,CAACC,MAAF,CAASC,KAAV;AAA3D;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAQI,QAAC,MAAD;AACA,UAAA,OAAO,MADP;AAEA,UAAA,IAAI,EAAC,QAFL;AAGA,UAAA,OAAO,EAAEJ,KAHT;AAIA,UAAA,SAAS,EAAC,oBAJV;AAKA,UAAA,eAAe,EAAC;AALhB;AAAA;AAAA;AAAA;AAAA,gBARJ,eAgBE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,YADF,eAqBJ;AAAA,oDAAoCA,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA,YArBI;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA0BH;;GA9GuBjD,S;;KAAAA,S","sourcesContent":["import React, {useState, useEffect}  from 'react';\r\nimport axios from 'axios';\r\nimport './Courses.css';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport history from \"../GlobalHistory/GlobalHistory\"\r\nimport Select from 'react-select';\r\n\r\nexport default function AddCourse(props){\r\n    \r\n    const [name, setName] = useState(\"\");\r\n    const [desc, setDesc] = useState(\"\");\r\n    const [abilities, setAbilities] = useState(\"\");\r\n    const [abs, setAbs] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState();\r\n    const [names, setNames] = useState();\r\n\r\n    function Add(event){\r\n        event.preventDefault();\r\n        const course = {\r\n            CourseName: name,\r\n            CourseDescription: desc,\r\n            AuthorEmail: props.match.params.email,\r\n            Abilities: JSON.stringify(abilities)\r\n        };\r\n        axios({\r\n        method: 'post',\r\n        url: \"https://localhost:44327/api/Course/\",\r\n        data: JSON.stringify(course),\r\n        maxContentLength: Infinity,\r\n        maxBodyLength: Infinity,\r\n        headers: {'Content-Type': 'application/json'}\r\n        })\r\n        .then(res => {\r\n            console.log(\"RESPONSE \", res);\r\n            console.log(res.data);\r\n        })\r\n    }\r\n\r\n    function GetTest() {\r\n      axios({method: 'get',\r\n      url: `https://localhost:44327/api/Ability/`,\r\n      headers: {'Content-Type': 'application/json'}})\r\n        .then(\r\n          (result) => {\r\n            console.log(\"RESULT: \", result.data)\r\n            setAbs(result.data)\r\n            setIsLoading(false)\r\n          }\r\n        ).catch(error => {setError(error);\r\n          debugger\r\n                          setIsLoading(false);}) \r\n        \r\n    }\r\n\r\n    function F(){\r\n      if(abs != null){\r\n        console.log(\"ABS: \", abs)\r\n        setNames(abs.map((item) => item.AbilityName))\r\n      }\r\n    }\r\n\r\n  useEffect(() => {\r\n       GetTest();\r\n  }, []);\r\n\r\n  if(isLoading){\r\n      return(\r\n      <p>Loading...</p>\r\n      )\r\n  }\r\n  else if(error){\r\n      return(<p>Error</p>)\r\n  } \r\n\r\n  \r\n  //const temp = abs.map((item) =>  item.AbilityName);\r\n           /* setNames(temp);*/\r\n            /*console.log(\"ABS: \", names);*/\r\n\r\n\r\n            /* <Select\r\n            closeMenuOnSelect={false}\r\n            components={animatedComponents}\r\n            defaultValue={[temp[0]]}\r\n            isMulti\r\n            options={temp}\r\n            />*/\r\n    const optionss = abs.map((item) => <option key={item.Id}>{item.AbilityName}</option>)\r\n    const felix = abs.map((item) => <div key={item.Id}>{item.AbilityName}</div>)\r\n    const fel = abs.map((item) =>  item.AbilityName)\r\n    return(\r\n       \r\n        <div className=\"Course\">\r\n          <div>\r\n        <form onSubmit={Add}>\r\n          <label>\r\n            Course Name:</label>\r\n            <input type=\"text\" name=\"Email\" onChange={(e) => setName(e.target.value)} />\r\n            <label>Course Description:</label>\r\n            <input type=\"text\" name=\"Password\" onChange={(e) => setDesc(e.target.value)} />\r\n            <label>Distance</label>\r\n            \r\n            <Select\r\n            isMulti\r\n            name=\"colors\"\r\n            options={felix}\r\n            className=\"basic-multi-select\"\r\n            classNamePrefix=\"select\"\r\n            >\r\n          </Select>\r\n          <Button type=\"submit\">Add</Button>\r\n        </form>\r\n      </div>\r\n    <h1>Where is fesfsdgfsgrsgdsrgrgh: {felix}</h1>\r\n        </div>\r\n      )\r\n}"]},"metadata":{},"sourceType":"module"}