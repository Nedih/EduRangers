{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Flash\\\\Desktop\\\\React\\\\react_front\\\\src\\\\Containers\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Login.css';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nexport default function Profile(props) {\n  _s();\n\n  const [avatar, setAvatar] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [isprofessor, setIsProfessor] = useState(false);\n\n  function GetUser() {\n    axios({\n      method: 'get',\n      url: `https://localhost:44327/api/Account/Profile/?email=${props.email}`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(result => {\n      console.log(result);\n      this.setState({\n        isLoaded: true,\n        userEmail: result.data.Email,\n        userPassword: \"\",\n        userName: result.data.Name,\n        userAvatar: \"\"\n      });\n      console.log(this.state.userEmail);\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n    console.log(this.state.userEmail);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const user = {\n      UserAvatar: avatar,\n      Email: email,\n      Password: password,\n      Name: name\n    };\n    JSON.stringify(user);\n    axios({\n      method: 'post',\n      url: \"https://localhost:44327/api/Account/Login\",\n      data: JSON.stringify(user),\n      maxContentLength: Infinity,\n      maxBodyLength: Infinity,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(\"RESPONSE \", res);\n      console.log(res.data);\n\n      if (res.data.Succedeed) {\n        userHasAuthenticated(true);\n        setUserEmail(user.Email);\n        alert(\"You`ve been succesfully logged in\");\n      } else alert(\"Wrong email or password\");\n    });\n  }\n  /*\r\n  <ul>\r\n          <li>\r\n              <img src={this.state.userAvatar} width=\"512px\" height=\"512px\"/>\r\n          </li>\r\n          <Button>Upload</Button>\r\n          <li> \r\n              {this.state.userName} <Button>Change</Button>\r\n          </li>\r\n          \r\n          <li>\r\n              {this.state.userEmail}<Button>Change</Button>\r\n          </li>\r\n          \r\n          \r\n          <li> \r\n              {this.state.password}<Button>Change</Button>\r\n          </li>\r\n          <Button>Save</Button>\r\n      </ul>\r\n  */\n\n\n  GetUser();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          autoFocus: true,\n          type: \"email\",\n          value: this.state.userEmail,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: this.state.userPassword,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"confirmPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: confPassword,\n          onChange: e => setConfPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        size: \"lg\",\n        controlId: \"isprofessor\",\n        style: {\n          display: 'flex',\n          flexFlow: 'row',\n          justifyContent: 'left'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          className: \"form-check-input\",\n          value: !isprofessor,\n          isprofessor: isprofessor.toString(),\n          checked: isprofessor,\n          onChange: e => handleCheckboxChange(e)\n          /*isprofessor={state.isprofessor.toString()}\r\n          onChange={this.handleChange5.bind(this)}*/\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Professor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        block: true,\n        size: \"lg\",\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profile, \"mtJepcxlUX8bhmInkctKZksn8e0=\");\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/Flash/Desktop/React/react_front/src/Containers/Profile.js"],"names":["React","useState","axios","Form","Button","Profile","props","avatar","setAvatar","email","setEmail","password","setPassword","name","setName","isprofessor","setIsProfessor","GetUser","method","url","headers","then","result","console","log","setState","isLoaded","userEmail","data","Email","userPassword","userName","Name","userAvatar","state","error","handleSubmit","event","preventDefault","user","UserAvatar","Password","JSON","stringify","maxContentLength","Infinity","maxBodyLength","res","Succedeed","userHasAuthenticated","setUserEmail","alert","e","target","value","confPassword","setConfPassword","display","flexFlow","justifyContent","toString","handleCheckboxChange"],"mappings":"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","sourcesContent":["import React, {useState}  from 'react';\r\nimport axios from 'axios';\r\nimport './Login.css';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport default function Profile(props){\r\n\r\n    const [avatar, setAvatar] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [isprofessor, setIsProfessor] = useState(false);\r\n\r\n    function GetUser() {\r\n      axios({method: 'get',\r\n      url: `https://localhost:44327/api/Account/Profile/?email=${props.email}`,\r\n      headers: {'Content-Type': 'application/json'}})\r\n        .then(\r\n          (result) => {\r\n            console.log(result)\r\n            this.setState({\r\n              isLoaded: true,\r\n              userEmail: result.data.Email,\r\n            userPassword: \"\",\r\n            userName: result.data.Name,\r\n            userAvatar: \"\"\r\n              \r\n            });\r\n            console.log(this.state.userEmail)\r\n          },\r\n\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n        console.log(this.state.userEmail)\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        const user = {\r\n            UserAvatar: avatar,\r\n            Email: email,\r\n            Password: password,\r\n            Name: name\r\n        };\r\n        JSON.stringify(user);\r\n        axios({\r\n          method: 'post',\r\n          url: \"https://localhost:44327/api/Account/Login\",\r\n          data: JSON.stringify(user),\r\n          maxContentLength: Infinity,\r\n          maxBodyLength: Infinity,\r\n          headers: {'Content-Type': 'application/json'}\r\n        })\r\n          .then(res => {\r\n            console.log(\"RESPONSE \", res);\r\n            console.log(res.data);\r\n            if(res.data.Succedeed){\r\n              userHasAuthenticated(true);\r\n              setUserEmail(user.Email);\r\n              alert(\"You`ve been succesfully logged in\");\r\n            }  \r\n            else alert(\"Wrong email or password\");\r\n          })\r\n          \r\n      }\r\n\r\n    /*\r\n    <ul>\r\n            <li>\r\n                <img src={this.state.userAvatar} width=\"512px\" height=\"512px\"/>\r\n            </li>\r\n            <Button>Upload</Button>\r\n            <li> \r\n                {this.state.userName} <Button>Change</Button>\r\n            </li>\r\n            \r\n            <li>\r\n                {this.state.userEmail}<Button>Change</Button>\r\n            </li>\r\n            \r\n            \r\n            <li> \r\n                {this.state.password}<Button>Change</Button>\r\n            </li>\r\n            <Button>Save</Button>\r\n        </ul>\r\n    */\r\n  GetUser()\r\n        return (\r\n        <div className=\"Login\">\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group size=\"lg\" controlId=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              autoFocus\r\n              type=\"email\"\r\n              value={this.state.userEmail}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group size=\"lg\" controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={this.state.userPassword}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group size=\"lg\" controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={confPassword}\r\n            onChange={(e) => setConfPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group size=\"lg\" controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Check size=\"lg\" controlId=\"isprofessor\" style={{display: 'flex',\r\n                                                        flexFlow: 'row',\r\n                                                        justifyContent: 'left',}}>\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              className=\"form-check-input\"\r\n              value={!isprofessor}\r\n              isprofessor={isprofessor.toString()}\r\n              checked={isprofessor}\r\n              onChange={(e) => handleCheckboxChange(e)}\r\n              /*isprofessor={state.isprofessor.toString()}\r\n              onChange={this.handleChange5.bind(this)}*/\r\n            />\r\n            <Form.Label>Professor</Form.Label>\r\n          </Form.Check>\r\n          <Button block size=\"lg\" type=\"submit\">\r\n            Sign Up\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n        )\r\n}"]},"metadata":{},"sourceType":"module"}