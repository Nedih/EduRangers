{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Flash\\\\Desktop\\\\React\\\\react_front\\\\src\\\\Containers\\\\Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Test.css';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport history from \"../GlobalHistory/GlobalHistory\";\nexport default function Test(props) {\n  _s();\n\n  const [test, setTest] = useState();\n  const [questions, setQuestions] = useState();\n  const [user, setuser] = useState();\n  const [name, setName] = useState();\n  const [desc, setDesc] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState();\n\n  function GetTest() {\n    axios({\n      method: 'get',\n      url: `https://localhost:44327/api/Test/?id=${props.match.params.id}`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(result => {\n      console.log(\"RESULT: \", result.data);\n      setTest(result.data);\n      setQuestions(result.data.Questions);\n      setIsLoading(false);\n    }).catch(error => {\n      setError(error);\n      setIsLoading(false);\n    });\n  }\n\n  function GetUser() {\n    axios({\n      method: 'get',\n      url: `https://localhost:44327/api/Account/Profile/?email=${props.match.params.email}`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(result => {\n      console.log(result);\n      setUser(result.data);\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const testModel = {\n      TestDescription: name,\n      TestName: desc\n    };\n    JSON.stringify(testModel);\n    axios({\n      method: 'put',\n      url: `https://localhost:44327/api/Test/?id=${props.match.params.id}`,\n      data: JSON.stringify(testModel),\n      maxContentLength: Infinity,\n      maxBodyLength: Infinity,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(\"RESPONSE \", res);\n      console.log(res.data);\n\n      if (res.data.Succedeed) {\n        alert(\"The test was changed succesfully\");\n      } else alert(\"The test wasn`t changed\");\n    });\n  }\n\n  useEffect(() => {\n    GetUser();\n    GetTest();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  } else if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 20\n    }, this);\n  }\n\n  const Quest = questions.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: item.QuestionText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 68\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => history.push(`/question/${item.Id}`),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        axios.delete(`https://localhost:44327/api/Question/?id=${item.Id}`).then(res => {\n          console.log(res);\n          console.log(res.data);\n        });\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item.AnswersString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 46\n  }, this));\n  console.log({\n    Quest\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Test\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          defaultValue: test.TestName,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"desc\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          defaultValue: test.TestDescription,\n          onChange: e => setDesc(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Average Mark: \", test.AvgMark]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        block: true,\n        size: \"lg\",\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [test.TestName, \" - Questionss\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mycontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Prof. \", user.Name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => history.push(`/addquestion/${test.Id}`),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mybtn\",\n          children: \"Add a test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 75\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 42\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Questions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), Quest]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Test, \"rojpm195uUnZrxkfYUmocP3N40E=\");\n\n_c = Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["C:/Users/Flash/Desktop/React/react_front/src/Containers/Test.js"],"names":["React","useState","useEffect","axios","Form","Button","history","Test","props","test","setTest","questions","setQuestions","user","setuser","name","setName","desc","setDesc","isLoading","setIsLoading","error","setError","GetTest","method","url","match","params","id","headers","then","result","console","log","data","Questions","catch","GetUser","email","setUser","handleSubmit","event","preventDefault","testModel","TestDescription","TestName","JSON","stringify","maxContentLength","Infinity","maxBodyLength","res","Succedeed","alert","Quest","map","item","QuestionText","push","Id","delete","AnswersString","e","target","value","AvgMark","Name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect}  from 'react';\r\n    import axios from 'axios';\r\n    import './Test.css';\r\n    import Form from \"react-bootstrap/Form\";\r\n    import Button from \"react-bootstrap/Button\";\r\n    import history from \"../GlobalHistory/GlobalHistory\"\r\n\r\nexport default function Test(props){\r\n    const [test, setTest] = useState();  \r\n    const [questions, setQuestions] = useState();  \r\n    const [user, setuser] = useState();\r\n        const [name, setName] = useState(); \r\n        const [desc, setDesc] = useState(); \r\n        const [isLoading, setIsLoading] = useState(true);\r\n        const [error, setError] = useState();\r\n\r\n        function GetTest() {\r\n            axios({method: 'get',\r\n            url: `https://localhost:44327/api/Test/?id=${props.match.params.id}`,\r\n            headers: {'Content-Type': 'application/json'}})\r\n              .then(\r\n                (result) => {\r\n                  console.log(\"RESULT: \", result.data)\r\n                  setTest(result.data)\r\n                  setQuestions(result.data.Questions)\r\n                  setIsLoading(false);\r\n                }\r\n              ).catch(error => {setError(error);\r\n                                setIsLoading(false);}) \r\n          }\r\n\r\n          function GetUser() {\r\n            axios({method: 'get',\r\n            url: `https://localhost:44327/api/Account/Profile/?email=${props.match.params.email}`,\r\n            headers: {'Content-Type': 'application/json'}})\r\n              .then(\r\n                (result) => {\r\n                  console.log(result)\r\n                  setUser(result.data);\r\n                }\r\n              )\r\n          }\r\n\r\n          function handleSubmit(event) {\r\n            event.preventDefault();\r\n            const testModel = {\r\n                    TestDescription: name,\r\n                    TestName: desc\r\n                };\r\n            JSON.stringify(testModel);\r\n            axios({\r\n              method: 'put',\r\n              url: `https://localhost:44327/api/Test/?id=${props.match.params.id}`,\r\n              data: JSON.stringify(testModel),\r\n              maxContentLength: Infinity,\r\n              maxBodyLength: Infinity,\r\n              headers: {'Content-Type': 'application/json'}\r\n            })\r\n              .then(res => {\r\n                console.log(\"RESPONSE \", res);\r\n                console.log(res.data);\r\n                if(res.data.Succedeed){\r\n                  alert(\"The test was changed succesfully\");\r\n                }  \r\n                else alert(\"The test wasn`t changed\");\r\n              }) \r\n          }\r\n\r\n\r\n        useEffect(() => {\r\n            GetUser();\r\n             GetTest();\r\n        }, []);\r\n\r\n        if(isLoading){\r\n            return(\r\n            <p>Loading...</p>\r\n            )\r\n        }\r\n        else if(error){\r\n            return(<p>Error</p>)\r\n        }\r\n        \r\n        \r\n\r\n        const Quest = questions.map((item => <div className=\"info\"><h1>{item.QuestionText}</h1>\r\n        <Button onClick={() => history.push(`/question/${item.Id}`)}>Edit</Button>\r\n        <Button onClick={() => {axios.delete(`https://localhost:44327/api/Question/?id=${item.Id}`)\r\n        .then(res => {\r\n          console.log(res);\r\n          console.log(res.data);\r\n        })}}>Delete</Button><p>{item.AnswersString}</p></div>));\r\n        console.log({Quest});\r\n\r\n        return(\r\n        <div className=\"Test\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group size=\"lg\" controlId=\"name\">\r\n        <Form.Label><h3>Test</h3></Form.Label>\r\n        <Form.Control\r\n            type=\"text\"\r\n            defaultValue={test.TestName}\r\n        onChange={(e) => setName(e.target.value)}\r\n        />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"desc\">\r\n        <Form.Label><h6>Description</h6></Form.Label>\r\n        <Form.Control\r\n            type=\"text\"\r\n            defaultValue={test.TestDescription}\r\n        onChange={(e) => setDesc(e.target.value)}\r\n        />\r\n        </Form.Group>\r\n        <li>Average Mark: {test.AvgMark}</li>\r\n        <Button block size=\"lg\" type=\"submit\">\r\n        Save\r\n        </Button>\r\n    </Form>\r\n    <h1>{test.TestName} - Questionss</h1><div className=\"mycontainer\">\r\n      <p>Prof. {user.Name}</p>\r\n          <Button onClick={() => history.push(`/addquestion/${test.Id}`)}><div className=\"mybtn\">Add a test</div></Button></div>\r\n        <br />\r\n        <br />\r\n        <h1>Questions:</h1>\r\n        {Quest}\r\n        </div>\r\n        )\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}