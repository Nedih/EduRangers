{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Flash\\\\Desktop\\\\React\\\\react_front\\\\src\\\\Containers\\\\Question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Question.css';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Formik, Field, Form as Form1 } from \"formik\";\nimport history from \"../GlobalHistory/GlobalHistory\";\nexport default function Question(props) {\n  _s();\n\n  const [question, setQuestion] = useState();\n  const [answer, setAnswer] = useState();\n  const [name, setName] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(); //let Answers\n\n  function GetQuestion() {\n    axios({\n      method: 'get',\n      url: `https://localhost:44327/api/Question/?id=${props.match.params.id}`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(result => {\n      console.log(\"RESULT: \", result.data);\n      setQuestion(result.data);\n      setIsLoading(false);\n    }).catch(error => {\n      setError(error);\n      setIsLoading(false);\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const questionModel = {\n      QuestionText: name\n    };\n    JSON.stringify(questionModel);\n    axios({\n      method: 'put',\n      url: `https://localhost:44327/api/Question/?id=${props.match.params.id}`,\n      data: JSON.stringify(questionModel),\n      maxContentLength: Infinity,\n      maxBodyLength: Infinity,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(\"RESPONSE \", res);\n      console.log(res.data);\n\n      if (res.data.Succedeed) {\n        alert(\"The test was changed succesfully\");\n      } else alert(\"The test wasn`t changed\");\n    });\n  }\n\n  function handleSubmit2(event) {\n    event.preventDefault();\n    console.log(event.target);\n    console.log(event.target.value);\n    const target = event.target;\n    /* const value = target.type === 'checkbox' ? target.checked : target.value;\r\n     const name = target.name;\r\n    \n     const answerModel = {\r\n         QuestionText: \r\n     };\r\n     JSON.stringify(answerModel);\r\n     axios({\r\n         method: 'put',\r\n         url: `https://localhost:44327/api/Answer/?id=${event.Id}`,\r\n         data: JSON.stringify(answerModel),\r\n         maxContentLength: Infinity,\r\n         maxBodyLength: Infinity,\r\n         headers: {'Content-Type': 'application/json'}\r\n     })\r\n         .then(res => {\r\n         console.log(\"RESPONSE \", res);\r\n         console.log(res.data);\r\n         if(res.data.Succedeed){\r\n             alert(\"The test was changed succesfully\");\r\n         }  \r\n         else alert(\"The test wasn`t changed\");\r\n         }) */\n  }\n\n  function chck(event) {\n    return !event.target.checked;\n  }\n\n  useEffect(() => {\n    GetQuestion();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  } else if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 20\n    }, this);\n  }\n\n  const Answers = question.Answers.map(item => /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      AnswerText: `${item.AnswerText}`,\n      IsCorrect: `${item.IsCorrect}`,\n      Id: `${item.Id}`\n    },\n    onSubmit: async values => {\n      const AnSwer = {\n        AnswerText: values.AnswerText,\n        IsCorrect: values.IsCorrect\n      };\n      await new Promise(resolve => setTimeout(resolve, 500));\n      axios({\n        method: 'put',\n        url: `https://localhost:44327/api/Answer/?id=${values.Id}`,\n        data: JSON.stringify(AnSwer),\n        maxContentLength: Infinity,\n        maxBodyLength: Infinity,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        console.log(\"RESPONSE \", res);\n        console.log(res.data);\n\n        if (res.data.Succedeed) {\n          alert(\"The test was changed succesfully\");\n        } else alert(\"The test wasn`t changed\");\n      });\n      alert(JSON.stringify(AnSwer));\n    },\n    children: [/*#__PURE__*/_jsxDEV(Field, {\n      type: \"checkbox\",\n      name: \"IsCorrect\",\n      className: \"form-check-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      type: \"text\",\n      name: \"AnswerText\",\n      id: `${item.Id}txt`,\n      placeholder: item.AnswerText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      block: true,\n      size: \"lg\",\n      type: \"submit\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        axios.delete(`https://localhost:44327/api/Answer/?id=${item.Id}`).then(res => {\n          console.log(res);\n          console.log(res.data);\n        });\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this)]\n  }, item.Id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 56\n  }, this));\n  console.log({\n    Answers\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Question\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => history.push(`/addanswer/${question.Id}`),\n      children: \"Add answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          defaultValue: question.QuestionText,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        block: true,\n        size: \"lg\",\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: \"Answers:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), Answers]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n  /* */\n}\n\n_s(Question, \"LO5dQnKAa0+vpf4nTm/m6aD6OAk=\");\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/Users/Flash/Desktop/React/react_front/src/Containers/Question.js"],"names":["React","useState","useEffect","axios","Form","Button","Formik","Field","Form1","history","Question","props","question","setQuestion","answer","setAnswer","name","setName","isLoading","setIsLoading","error","setError","GetQuestion","method","url","match","params","id","headers","then","result","console","log","data","catch","handleSubmit","event","preventDefault","questionModel","QuestionText","JSON","stringify","maxContentLength","Infinity","maxBodyLength","res","Succedeed","alert","handleSubmit2","target","value","chck","checked","Answers","map","item","AnswerText","IsCorrect","Id","values","AnSwer","Promise","resolve","setTimeout","delete","push","e"],"mappings":"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","sourcesContent":["import React, {useState, useEffect}  from 'react';\r\n    import axios from 'axios';\r\n    import './Question.css';\r\n    import Form from \"react-bootstrap/Form\";\r\n    import Button from \"react-bootstrap/Button\";\r\n    import { Formik, Field, Form as Form1} from \"formik\";\r\n    import history from \"../GlobalHistory/GlobalHistory\"\r\n\r\n    export default function Question(props){\r\n        const [question, setQuestion] = useState();  \r\n        const [answer, setAnswer] = useState(); \r\n        const [name, setName] = useState(); \r\n        const [isLoading, setIsLoading] = useState(true);\r\n        const [error, setError] = useState();\r\n        //let Answers\r\n\r\n        function GetQuestion() {\r\n            axios({method: 'get',\r\n            url: `https://localhost:44327/api/Question/?id=${props.match.params.id}`,\r\n            headers: {'Content-Type': 'application/json'}})\r\n                .then(\r\n                (result) => {\r\n                    console.log(\"RESULT: \", result.data)\r\n                    setQuestion(result.data)\r\n                    setIsLoading(false);\r\n                }\r\n                ).catch(error => {setError(error);\r\n                                setIsLoading(false);}) \r\n            }\r\n\r\n            function handleSubmit(event) {\r\n            event.preventDefault();\r\n            const questionModel = {\r\n                QuestionText: name\r\n            };\r\n            JSON.stringify(questionModel);\r\n            axios({\r\n                method: 'put',\r\n                url: `https://localhost:44327/api/Question/?id=${props.match.params.id}`,\r\n                data: JSON.stringify(questionModel),\r\n                maxContentLength: Infinity,\r\n                maxBodyLength: Infinity,\r\n                headers: {'Content-Type': 'application/json'}\r\n            })\r\n                .then(res => {\r\n                console.log(\"RESPONSE \", res);\r\n                console.log(res.data);\r\n                if(res.data.Succedeed){\r\n                    alert(\"The test was changed succesfully\");\r\n                }  \r\n                else alert(\"The test wasn`t changed\");\r\n                }) \r\n            }\r\n\r\n            function handleSubmit2(event) {\r\n                event.preventDefault();\r\n                console.log(event.target);\r\n                console.log(event.target.value);\r\n                const target = event.target;\r\n               /* const value = target.type === 'checkbox' ? target.checked : target.value;\r\n                const name = target.name;\r\n            \r\n\r\n                const answerModel = {\r\n                    QuestionText: \r\n                };\r\n                JSON.stringify(answerModel);\r\n                axios({\r\n                    method: 'put',\r\n                    url: `https://localhost:44327/api/Answer/?id=${event.Id}`,\r\n                    data: JSON.stringify(answerModel),\r\n                    maxContentLength: Infinity,\r\n                    maxBodyLength: Infinity,\r\n                    headers: {'Content-Type': 'application/json'}\r\n                })\r\n                    .then(res => {\r\n                    console.log(\"RESPONSE \", res);\r\n                    console.log(res.data);\r\n                    if(res.data.Succedeed){\r\n                        alert(\"The test was changed succesfully\");\r\n                    }  \r\n                    else alert(\"The test wasn`t changed\");\r\n                    }) */\r\n                }\r\n\r\n                function chck(event){\r\n                    return !event.target.checked;\r\n                }\r\n\r\n        useEffect(() => {\r\n            GetQuestion();\r\n        }, []);\r\n\r\n        if(isLoading){\r\n            return(\r\n            <p>Loading...</p>\r\n            )\r\n        }\r\n        else if(error){\r\n            return(<p>Error</p>)\r\n        }\r\n        \r\n        \r\n\r\n       const Answers = question.Answers.map((item =>   <Formik key = {item.Id} \r\n        initialValues={{ AnswerText: `${item.AnswerText}`, IsCorrect: `${item.IsCorrect}`, Id: `${item.Id}` }}\r\n        onSubmit={async values => {\r\n            const AnSwer = {\r\n                AnswerText: values.AnswerText,\r\n                IsCorrect: values.IsCorrect\r\n            }\r\n          await new Promise(resolve => setTimeout(resolve, 500));\r\n          axios({\r\n            method: 'put',\r\n            url: `https://localhost:44327/api/Answer/?id=${values.Id}`,\r\n            data: JSON.stringify(AnSwer),\r\n            maxContentLength: Infinity,\r\n            maxBodyLength: Infinity,\r\n            headers: {'Content-Type': 'application/json'}\r\n        })\r\n            .then(res => {\r\n            console.log(\"RESPONSE \", res);\r\n            console.log(res.data);\r\n            if(res.data.Succedeed){\r\n                alert(\"The test was changed succesfully\");\r\n            }  \r\n            else alert(\"The test wasn`t changed\");\r\n            }) \r\n          alert(JSON.stringify(AnSwer));\r\n\r\n        }}> \r\n            \r\n        <Field\r\n            type=\"checkbox\" name=\"IsCorrect\" \r\n            className=\"form-check-input\"\r\n        />\r\n        <Field\r\n            type=\"text\" name=\"AnswerText\" id={`${item.Id}txt`}\r\n            placeholder={item.AnswerText}\r\n        />\r\n        <Button block size=\"lg\" type=\"submit\">\r\n        Save\r\n        </Button>\r\n        <Button onClick={() => {axios.delete(`https://localhost:44327/api/Answer/?id=${item.Id}`)\r\n      .then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n      })}}>Delete</Button>\r\n        \r\n        \r\n    </Formik>));\r\n        console.log({Answers});\r\n\r\n        return(\r\n        <div className=\"Question\">\r\n            <Button onClick={() => history.push(`/addanswer/${question.Id}`)}>Add answer</Button>\r\n            <Form onSubmit={handleSubmit}>\r\n            <Form.Group size=\"lg\" controlId=\"name\">\r\n        <Form.Label><h3>Question</h3></Form.Label>\r\n        <Form.Control\r\n            type=\"text\"\r\n            defaultValue={question.QuestionText}\r\n        onChange={(e) => setName(e.target.value)}\r\n        />\r\n        </Form.Group>\r\n        <Button block size=\"lg\" type=\"submit\">\r\n        Save\r\n        </Button>\r\n        </Form>\r\n        <br />\r\n        <br />\r\n        <h6>Answers:</h6>\r\n        {Answers}\r\n        \r\n        </div>\r\n        )\r\n\r\n        /* */\r\n    \r\n}           "]},"metadata":{},"sourceType":"module"}