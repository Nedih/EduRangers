{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Flash\\\\Desktop\\\\React\\\\react_front\\\\src\\\\Containers\\\\AddCourse.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Courses.css';\nimport Button from \"react-bootstrap/Button\";\nimport history from \"../GlobalHistory/GlobalHistory\";\nimport Select from 'react-select';\nimport Sel from '@material-ui/core/Select';\nimport MultiSelect from \"react-multi-select-component\";\nexport default function AddCourse(props) {\n  _s();\n\n  const options = [{\n    label: \"Grapes 🍇\",\n    value: \"grapes\"\n  }, {\n    label: \"Mango 🥭\",\n    value: \"mango\"\n  }, {\n    label: \"Strawberry 🍓\",\n    value: \"strawberry\",\n    disabled: true\n  }, {\n    label: \"Watermelon 🍉\",\n    value: \"watermelon\"\n  }, {\n    label: \"Pear 🍐\",\n    value: \"pear\"\n  }, {\n    label: \"Apple 🍎\",\n    value: \"apple\"\n  }, {\n    label: \"Tangerine 🍊\",\n    value: \"tangerine\"\n  }, {\n    label: \"Pineapple 🍍\",\n    value: \"pineapple\"\n  }, {\n    label: \"Peach 🍑\",\n    value: \"peach\"\n  }];\n  const [selected, setSelected] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [abilities, setAbilities] = useState(\"\");\n  const [abs, setAbs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState();\n  const [names, setNames] = useState();\n\n  function Add(event) {\n    event.preventDefault();\n    const course = {\n      CourseName: name,\n      CourseDescription: desc,\n      AuthorEmail: props.match.params.email,\n      Abilities: JSON.stringify(abilities)\n    };\n    axios({\n      method: 'post',\n      url: \"https://localhost:44327/api/Course/\",\n      data: JSON.stringify(course),\n      maxContentLength: Infinity,\n      maxBodyLength: Infinity,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(\"RESPONSE \", res);\n      console.log(res.data);\n    });\n  }\n\n  function GetTest() {\n    axios({\n      method: 'get',\n      url: `https://localhost:44327/api/Ability/Abs/`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(result => {\n      console.log(\"RESULT: \", result.data);\n      setAbs(result.data);\n      setIsLoading(false);\n    }).catch(error => {\n      setError(error);\n      debugger;\n      setIsLoading(false);\n    });\n  }\n\n  useEffect(() => {\n    GetTest();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  } else if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 14\n    }, this);\n  } //const temp = abs.map((item) =>  item.AbilityName);\n\n  /* setNames(temp);*/\n\n  /*console.log(\"ABS: \", names);*/\n\n  /* <Select\r\n  closeMenuOnSelect={false}\r\n  components={animatedComponents}\r\n  defaultValue={[temp[0]]}\r\n  isMulti\r\n  options={temp}\r\n  />*/\n\n  /*const felix = abs.map((item) => <div key={item.Id}>{item.AbilityName}</div>)\r\n  const fel = JSON.parse(abs);*/\n\n\n  const fel = abs.map(item => item);\n  const ops = abs.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: item,\n    children: item\n  }, item, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 35\n  }, this));\n  const optionsss = abs.map(item => [{\n    label: item,\n    value: item\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Course\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: Add,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Course Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Email\",\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Course Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Password\",\n          onChange: e => setDesc(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Distance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          isMulti: true,\n          name: \"colors\",\n          className: \"basic-multi-select\",\n          classNamePrefix: \"select\",\n          options: ops,\n          children: [\" \", ops]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Select Fruits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(selected)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(MultiSelect, {\n          options: options,\n          value: selected,\n          onChange: setSelected,\n          labelledBy: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Where is fesfsdgfsgrsgdsrgrgh: \", abs, fel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddCourse, \"CHUPxxB7+YhlQPxE2hJOmjNQv/k=\");\n\n_c = AddCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCourse\");","map":{"version":3,"sources":["C:/Users/Flash/Desktop/React/react_front/src/Containers/AddCourse.js"],"names":["React","useState","useEffect","axios","Button","history","Select","Sel","MultiSelect","AddCourse","props","options","label","value","disabled","selected","setSelected","name","setName","desc","setDesc","abilities","setAbilities","abs","setAbs","isLoading","setIsLoading","error","setError","names","setNames","Add","event","preventDefault","course","CourseName","CourseDescription","AuthorEmail","match","params","email","Abilities","JSON","stringify","method","url","data","maxContentLength","Infinity","maxBodyLength","headers","then","res","console","log","GetTest","result","catch","fel","map","item","ops","optionsss","e","target"],"mappings":"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","sourcesContent":["import React, {useState, useEffect}  from 'react';\r\nimport axios from 'axios';\r\nimport './Courses.css';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport history from \"../GlobalHistory/GlobalHistory\"\r\nimport Select from 'react-select';\r\nimport Sel from '@material-ui/core/Select';\r\nimport MultiSelect from \"react-multi-select-component\";\r\n\r\nexport default function AddCourse(props){\r\n  const options = [\r\n    { label: \"Grapes 🍇\", value: \"grapes\" },\r\n    { label: \"Mango 🥭\", value: \"mango\" },\r\n    { label: \"Strawberry 🍓\", value: \"strawberry\", disabled: true },\r\n    { label: \"Watermelon 🍉\", value: \"watermelon\" },\r\n    { label: \"Pear 🍐\", value: \"pear\" },\r\n    { label: \"Apple 🍎\", value: \"apple\" },\r\n    { label: \"Tangerine 🍊\", value: \"tangerine\" },\r\n    { label: \"Pineapple 🍍\", value: \"pineapple\" },\r\n    { label: \"Peach 🍑\", value: \"peach\" },\r\n  ];\r\n \r\n  const [selected, setSelected] = useState([]);\r\n    const [name, setName] = useState(\"\");\r\n    const [desc, setDesc] = useState(\"\");\r\n    const [abilities, setAbilities] = useState(\"\");\r\n    const [abs, setAbs] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState();\r\n    const [names, setNames] = useState();\r\n\r\n    function Add(event){\r\n        event.preventDefault();\r\n        const course = {\r\n            CourseName: name,\r\n            CourseDescription: desc,\r\n            AuthorEmail: props.match.params.email,\r\n            Abilities: JSON.stringify(abilities)\r\n        };\r\n        axios({\r\n        method: 'post',\r\n        url: \"https://localhost:44327/api/Course/\",\r\n        data: JSON.stringify(course),\r\n        maxContentLength: Infinity,\r\n        maxBodyLength: Infinity,\r\n        headers: {'Content-Type': 'application/json'}\r\n        })\r\n        .then(res => {\r\n            console.log(\"RESPONSE \", res);\r\n            console.log(res.data);\r\n        })\r\n    }\r\n\r\n    function GetTest() {\r\n      axios({method: 'get',\r\n      url: `https://localhost:44327/api/Ability/Abs/`,\r\n      headers: {'Content-Type': 'application/json'}})\r\n        .then(\r\n          (result) => {\r\n            console.log(\"RESULT: \", result.data)\r\n            setAbs(result.data)\r\n            setIsLoading(false)\r\n          }\r\n        ).catch(error => {setError(error);\r\n          debugger\r\n                          setIsLoading(false);}) \r\n        \r\n    }\r\n\r\n  useEffect(() => {\r\n       GetTest();\r\n  }, []);\r\n\r\n  if(isLoading){\r\n      return(\r\n      <p>Loading...</p>\r\n      )\r\n  }\r\n  else if(error){\r\n      return(<p>Error</p>)\r\n  } \r\n\r\n  \r\n  //const temp = abs.map((item) =>  item.AbilityName);\r\n           /* setNames(temp);*/\r\n            /*console.log(\"ABS: \", names);*/\r\n\r\n\r\n            /* <Select\r\n            closeMenuOnSelect={false}\r\n            components={animatedComponents}\r\n            defaultValue={[temp[0]]}\r\n            isMulti\r\n            options={temp}\r\n            />*/\r\n    /*const felix = abs.map((item) => <div key={item.Id}>{item.AbilityName}</div>)\r\n    const fel = JSON.parse(abs);*/\r\n    const fel = abs.map((item) => item);\r\n    const ops = abs.map((item) => <option key={item} value={item}>{item}</option>);\r\n    const optionsss = abs.map((item) => [\r\n      { label: item, value: item },\r\n    ]);\r\n    return(\r\n       \r\n        <div className=\"Course\">\r\n          <div>\r\n        <form onSubmit={Add}>\r\n          <label>\r\n            Course Name:</label>\r\n            <input type=\"text\" name=\"Email\" onChange={(e) => setName(e.target.value)} />\r\n            <label>Course Description:</label>\r\n            <input type=\"text\" name=\"Password\" onChange={(e) => setDesc(e.target.value)} />\r\n            <label>Distance</label>\r\n            \r\n            <Select\r\n            isMulti\r\n            name=\"colors\"\r\n            className=\"basic-multi-select\"\r\n            classNamePrefix=\"select\"\r\n            options={ops}\r\n            > {ops}\r\n          </Select>\r\n          <Button type=\"submit\">Add</Button>\r\n        </form>\r\n        <div>\r\n      <h1>Select Fruits</h1>\r\n      <pre>{JSON.stringify(selected)}</pre>\r\n      <MultiSelect\r\n        options={options}\r\n        value={selected}\r\n        onChange={setSelected}\r\n        labelledBy={\"Select\"}\r\n      />\r\n    </div>\r\n      </div>\r\n    <h1>Where is fesfsdgfsgrsgdsrgrgh: {abs}{fel}</h1>\r\n        </div>\r\n      )\r\n}"]},"metadata":{},"sourceType":"module"}