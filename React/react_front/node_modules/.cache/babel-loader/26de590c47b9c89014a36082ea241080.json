{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Flash\\\\Desktop\\\\React\\\\react_front\\\\src\\\\Containers\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport './Register.css';\nimport { useAppContext } from \"../Libs/ContextLib\";\nexport default function PostUser() {\n  _s();\n\n  /*state = {\r\n    Email: '',\r\n    Password: '',\r\n    ConfirmPassword: '',\r\n    Name: '',\r\n    isprofessor: false\r\n  }*/\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confPassword, setConfPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [isprofessor, setIsProfessor] = useState(false);\n  const {\n    userHasAuthenticated\n  } = useAppContext();\n  /* handleChange = event => {\r\n     this.setState({ Email: event.target.value });\r\n   }\r\n   handleChange2 = event => {\r\n     this.setState({ Password: event.target.value });\r\n   }\r\n   handleChange3 = event => {\r\n     this.setState({ ConfirmPassword: event.target.value });\r\n   }\r\n   handleChange4 = event => {\r\n     this.setState({ Name: event.target.value });\r\n   }\r\n   handleChange5 = event => {\r\n     this.setState({isprofessor: !this.state.isprofessor});\r\n   }*/\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const user = {\n      Email: email,\n      Password: password,\n      ConfirmPassword: confPassword,\n      Name: name,\n      isprofessor: isprofessor.toString()\n    };\n    JSON.stringify(user);\n    console.log(user);\n    axios({\n      method: 'post',\n      url: \"https://localhost:44327/api/Account/Register\",\n      data: JSON.stringify(user),\n      maxContentLength: Infinity,\n      maxBodyLength: Infinity,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(\"RESPONSE \", res);\n      console.log(res.data);\n    });\n    userHasAuthenticated(true);\n  }\n  /*return (\r\n    <div>\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Person Name:\r\n          <input type=\"text\" name=\"Email\" onChange={this.handleChange} />\r\n          <input type=\"text\" name=\"Password\" onChange={this.handleChange2} />\r\n          <input type=\"text\" name=\"ConfirmPassword\" onChange={this.handleChange3} />\r\n          <input type=\"text\" name=\"Name\" onChange={this.handleChange4} />\r\n          <input type=\"checkbox\" id=\"contactChoice1\"\r\n          name=\"isprofessor\" \r\n          isprofessor={this.state.isprofessor.toString()}\r\n          onChange={this.handleChange5.bind(this)} />\r\n          <label htmlFor=\"contactChoice1\">Professor</label>\r\n        </label>\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    </div>\r\n  )*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          autoFocus: true,\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"confirmPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: confPassword,\n          onChange: e => setConfPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        size: \"lg\",\n        controlId: \"isprofessor\",\n        style: {\n          display: 'flex',\n          flexFlow: 'row',\n          justifyContent: 'left'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          className: \"form-check-input\",\n          value: !isprofessor,\n          isprofessor: isprofessor.toString(),\n          onChange: e => setIsProfessor(e.target.value)\n          /*isprofessor={state.isprofessor.toString()}\r\n          onChange={this.handleChange5.bind(this)}*/\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Professor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        block: true,\n        size: \"lg\",\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostUser, \"zl8g9ogjgX/peYDI22pb+bKIq24=\", false, function () {\n  return [useAppContext];\n});\n\n_c = PostUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostUser\");","map":{"version":3,"sources":["C:/Users/Flash/Desktop/React/react_front/src/Containers/Register.js"],"names":["React","useState","axios","Form","Button","useAppContext","PostUser","email","setEmail","password","setPassword","confPassword","setConfPassword","name","setName","isprofessor","setIsProfessor","userHasAuthenticated","handleSubmit","event","preventDefault","user","Email","Password","ConfirmPassword","Name","toString","JSON","stringify","console","log","method","url","data","maxContentLength","Infinity","maxBodyLength","headers","then","res","e","target","value","display","flexFlow","justifyContent"],"mappings":"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","sourcesContent":["import React, {useState}  from 'react';\r\nimport axios from 'axios';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport './Register.css';\r\nimport { useAppContext } from \"../Libs/ContextLib\";\r\n\r\nexport default function PostUser() {\r\n  /*state = {\r\n    Email: '',\r\n    Password: '',\r\n    ConfirmPassword: '',\r\n    Name: '',\r\n    isprofessor: false\r\n  }*/\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confPassword, setConfPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [isprofessor, setIsProfessor] = useState(false);\r\n  const { userHasAuthenticated } = useAppContext();\r\n\r\n /* handleChange = event => {\r\n    this.setState({ Email: event.target.value });\r\n  }\r\n  handleChange2 = event => {\r\n    this.setState({ Password: event.target.value });\r\n  }\r\n  handleChange3 = event => {\r\n    this.setState({ ConfirmPassword: event.target.value });\r\n  }\r\n  handleChange4 = event => {\r\n    this.setState({ Name: event.target.value });\r\n  }\r\n  handleChange5 = event => {\r\n    this.setState({isprofessor: !this.state.isprofessor});\r\n  }*/\r\n \r\n  function handleSubmit (event) {\r\n    event.preventDefault();\r\n    const user = {\r\n        Email: email,\r\n        Password: password,\r\n        ConfirmPassword: confPassword,\r\n        Name: name,\r\n        isprofessor: isprofessor.toString()\r\n    };\r\n    JSON.stringify(user);\r\n    console.log(user);\r\n    axios({\r\n      method: 'post',\r\n      url: \"https://localhost:44327/api/Account/Register\",\r\n      data: JSON.stringify(user),\r\n      maxContentLength: Infinity,\r\n      maxBodyLength: Infinity,\r\n      headers: {'Content-Type': 'application/json'}\r\n  })\r\n      .then(res => {\r\n        console.log(\"RESPONSE \", res);\r\n        console.log(res.data);\r\n      })\r\n      userHasAuthenticated(true);\r\n  }\r\n\r\n    /*return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Person Name:\r\n            <input type=\"text\" name=\"Email\" onChange={this.handleChange} />\r\n            <input type=\"text\" name=\"Password\" onChange={this.handleChange2} />\r\n            <input type=\"text\" name=\"ConfirmPassword\" onChange={this.handleChange3} />\r\n            <input type=\"text\" name=\"Name\" onChange={this.handleChange4} />\r\n            <input type=\"checkbox\" id=\"contactChoice1\"\r\n            name=\"isprofessor\" \r\n            isprofessor={this.state.isprofessor.toString()}\r\n            onChange={this.handleChange5.bind(this)} />\r\n            <label htmlFor=\"contactChoice1\">Professor</label>\r\n          </label>\r\n          <button type=\"submit\">Add</button>\r\n        </form>\r\n      </div>\r\n    )*/\r\n\r\n    return (     \r\n        <div className=\"Login\">\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group size=\"lg\" controlId=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              autoFocus\r\n              type=\"email\"\r\n              value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group size=\"lg\" controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group size=\"lg\" controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={confPassword}\r\n            onChange={(e) => setConfPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group size=\"lg\" controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Check size=\"lg\" controlId=\"isprofessor\" style={{display: 'flex',\r\n                                                        flexFlow: 'row',\r\n                                                        justifyContent: 'left',}}>\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              className=\"form-check-input\"\r\n              value={!isprofessor}\r\n              isprofessor={isprofessor.toString()}\r\n              onChange={(e) => setIsProfessor(e.target.value)}\r\n              /*isprofessor={state.isprofessor.toString()}\r\n              onChange={this.handleChange5.bind(this)}*/\r\n            />\r\n            <Form.Label>Professor</Form.Label>\r\n          </Form.Check>\r\n          <Button block size=\"lg\" type=\"submit\">\r\n            Sign Up\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n      )\r\n }"]},"metadata":{},"sourceType":"module"}