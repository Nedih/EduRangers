{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Flash\\\\Desktop\\\\React\\\\react_front\\\\src\\\\Containers\\\\Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Test.css';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport history from \"../GlobalHistory/GlobalHistory\";\nexport default function Test(props) {\n  _s();\n\n  const [test, setTest] = useState();\n  const [name, setName] = useState();\n  const [desc, setDesc] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState();\n\n  function GetTest() {\n    axios({\n      method: 'get',\n      url: `https://localhost:44327/api/Test/?id=${props.match.params.id}`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(result => {\n      console.log(\"RESULT: \", result.data);\n      setTest(result.data);\n      setIsLoading(false);\n    }).catch(error => {\n      setError(error);\n      setIsLoading(false);\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const testModel = {\n      TestDescription: name,\n      TestName: desc\n    };\n    JSON.stringify(testModel);\n    axios({\n      method: 'put',\n      url: `https://localhost:44327/api/Test/?id=${props.match.params.id}`,\n      data: JSON.stringify(testModel),\n      maxContentLength: Infinity,\n      maxBodyLength: Infinity,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(\"RESPONSE \", res);\n      console.log(res.data);\n\n      if (res.data.Succedeed) {\n        alert(\"The test was changed succesfully\");\n      } else alert(\"The test wasn`t changed\");\n    });\n  }\n\n  useEffect(() => {\n    GetTest();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  } else if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 20\n    }, this);\n  }\n\n  const Questions = test.Questions.map(item => /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: [item.QuestionText, /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => history.push(`/question/${item.Id}`),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 98\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 75\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: item.Answers.AnswersString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 177\n    }, this)]\n  }, item.Id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 55\n  }, this));\n  console.log({\n    Questions\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Test\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: test.TestName,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"desc\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: test.TestDescription,\n          onChange: e => setDesc(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        block: true,\n        size: \"lg\",\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: \"Questions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), Questions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Test, \"KSsCHVkAQ+s++VQRM6bZytxTcTY=\");\n\n_c = Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["C:/Users/Flash/Desktop/React/react_front/src/Containers/Test.js"],"names":["React","useState","useEffect","axios","Form","Button","history","Test","props","test","setTest","name","setName","desc","setDesc","isLoading","setIsLoading","error","setError","GetTest","method","url","match","params","id","headers","then","result","console","log","data","catch","handleSubmit","event","preventDefault","testModel","TestDescription","TestName","JSON","stringify","maxContentLength","Infinity","maxBodyLength","res","Succedeed","alert","Questions","map","item","QuestionText","push","Id","Answers","AnswersString","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect}  from 'react';\r\n    import axios from 'axios';\r\n    import './Test.css';\r\n    import Form from \"react-bootstrap/Form\";\r\n    import Button from \"react-bootstrap/Button\";\r\n    import history from \"../GlobalHistory/GlobalHistory\"\r\n\r\nexport default function Test(props){\r\n    const [test, setTest] = useState();  \r\n        const [name, setName] = useState(); \r\n        const [desc, setDesc] = useState(); \r\n        const [isLoading, setIsLoading] = useState(true);\r\n        const [error, setError] = useState();\r\n\r\n        function GetTest() {\r\n            axios({method: 'get',\r\n            url: `https://localhost:44327/api/Test/?id=${props.match.params.id}`,\r\n            headers: {'Content-Type': 'application/json'}})\r\n              .then(\r\n                (result) => {\r\n                  console.log(\"RESULT: \", result.data)\r\n                  setTest(result.data)\r\n                  setIsLoading(false);\r\n                }\r\n              ).catch(error => {setError(error);\r\n                                setIsLoading(false);}) \r\n          }\r\n\r\n          function handleSubmit(event) {\r\n            event.preventDefault();\r\n            const testModel = {\r\n                    TestDescription: name,\r\n                    TestName: desc\r\n                };\r\n            JSON.stringify(testModel);\r\n            axios({\r\n              method: 'put',\r\n              url: `https://localhost:44327/api/Test/?id=${props.match.params.id}`,\r\n              data: JSON.stringify(testModel),\r\n              maxContentLength: Infinity,\r\n              maxBodyLength: Infinity,\r\n              headers: {'Content-Type': 'application/json'}\r\n            })\r\n              .then(res => {\r\n                console.log(\"RESPONSE \", res);\r\n                console.log(res.data);\r\n                if(res.data.Succedeed){\r\n                  alert(\"The test was changed succesfully\");\r\n                }  \r\n                else alert(\"The test wasn`t changed\");\r\n              }) \r\n          }\r\n\r\n\r\n        useEffect(() => {\r\n             GetTest();\r\n        }, []);\r\n\r\n        if(isLoading){\r\n            return(\r\n            <p>Loading...</p>\r\n            )\r\n        }\r\n        else if(error){\r\n            return(<p>Error</p>)\r\n        }\r\n        \r\n        \r\n\r\n        const Questions = test.Questions.map((item => <ul key = {item.Id}><li>{item.QuestionText}<Button onClick={() => history.push(`/question/${item.Id}`)}>Edit</Button></li><li>{item.Answers.AnswersString}</li></ul>));\r\n        console.log({Questions});\r\n\r\n        return(\r\n        <div className=\"Test\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group size=\"lg\" controlId=\"name\">\r\n        <Form.Label><h3>Test</h3></Form.Label>\r\n        <Form.Control\r\n            type=\"text\"\r\n            value={test.TestName}\r\n        onChange={(e) => setName(e.target.value)}\r\n        />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"desc\">\r\n        <Form.Label><h6>Description</h6></Form.Label>\r\n        <Form.Control\r\n            type=\"text\"\r\n            value={test.TestDescription}\r\n        onChange={(e) => setDesc(e.target.value)}\r\n        />\r\n        </Form.Group>\r\n        <Button block size=\"lg\" type=\"submit\">\r\n        Save\r\n        </Button>\r\n    </Form>\r\n        <br />\r\n        <br />\r\n        <h6>Questions:</h6>\r\n        {Questions}\r\n        </div>\r\n        )\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}